
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MarkAttendance extends javax.swing.JFrame {

    /**
     * Creates new form MarkAttendance
     */
    static String Id;
    int sem, y;
    String c, t;
    Connection con;
    PreparedStatement pst ;
    ResultSet rs;
    DefaultTableModel model;
    public MarkAttendance( String Id) {
        this.Id = Id;
        model = new DefaultTableModel();
        initComponents();
        
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cms", "root", "root");
            pst = con.prepareStatement("SELECT DISTINCT semester FROM attendance where cms_id = ?;");
            pst.setString(1, Id);
            rs = pst.executeQuery();
            
            DefaultComboBoxModel semesterModel = new DefaultComboBoxModel();
            while(rs.next()) {
                int semester_id = rs.getInt("semester");
                //String courseId = rs.getString("course_id");
                //String courseName = rs.getString("name");
                //model.addElement(courseId + " - " + courseName);
                semesterModel.addElement(semester_id + "");
            }
            semester.setModel(semesterModel);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        back_btn1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        attend = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        term = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        year = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        course = new javax.swing.JComboBox<>();
        view = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        semester = new javax.swing.JComboBox<>();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(7, 10, 82));
        jPanel2.setPreferredSize(new java.awt.Dimension(1085, 48));

        jLabel1.setBackground(new java.awt.Color(7, 10, 82));
        jLabel1.setFont(new java.awt.Font("Dubai", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CMS Attendance");

        back_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back.png"))); // NOI18N
        back_btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                back_btn1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(back_btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(387, 387, 387)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back_btn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        attend.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Attendance Date", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        attend.setRowHeight(30);
        jScrollPane1.setViewportView(attend);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(7, 10, 82));
        jLabel2.setText("Semester: ");

        term.setBackground(new java.awt.Color(255, 255, 255));
        term.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        term.setForeground(new java.awt.Color(7, 10, 82));
        term.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        term.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(7, 10, 82));
        jLabel3.setText("Year:");

        year.setBackground(new java.awt.Color(255, 255, 255));
        year.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        year.setForeground(new java.awt.Color(7, 10, 82));
        year.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(7, 10, 82));
        jLabel4.setText("Course:");

        course.setBackground(new java.awt.Color(255, 255, 255));
        course.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        course.setForeground(new java.awt.Color(7, 10, 82));
        course.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseActionPerformed(evt);
            }
        });

        view.setBackground(new java.awt.Color(7, 10, 82));
        view.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        view.setForeground(new java.awt.Color(255, 255, 255));
        view.setText(" View Attendance");
        view.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(7, 10, 82));
        jLabel5.setText("Term: ");

        semester.setBackground(new java.awt.Color(255, 255, 255));
        semester.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        semester.setForeground(new java.awt.Color(7, 10, 82));
        semester.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        semester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semesterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1270, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(semester, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(term, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(course, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(view)
                        .addGap(48, 48, 48))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(term, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(course, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(view))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void termActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            t = term.getSelectedItem().toString();
            
            DefaultComboBoxModel yearModel = new DefaultComboBoxModel();
            pst = con.prepareStatement("SELECT DISTINCT year FROM attendance WHERE semester = ? and term = ?;");
            pst.setInt(1, sem);
            pst.setString(2, t);
            rs = pst.executeQuery();
            while(rs.next()){
                int y = rs.getInt("year");
                yearModel.addElement(y + "");
            }
            year.setModel(yearModel);
        } catch (SQLException ex) {
            Logger.getLogger(InstructorAttendence.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_termActionPerformed

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            y = Integer.parseInt(year.getSelectedItem().toString());
            
            DefaultComboBoxModel courseModel = new DefaultComboBoxModel();
            //PreparedStatement pst = con.prepareStatement("SELECT DISTINCT sections.course_id, courses.name FROM sections INNER JOIN courses ON sections.course_id = courses.id WHERE ins_id = ?");

            pst = con.prepareStatement("SELECT DISTINCT attendance.course_id, courses.name FROM attendance INNER JOIN courses ON attendance.course_id = courses.id WHERE attendance.cms_id = ? and attendance.semester = ? and attendance.term = ? and attendance.year = ?;");
            pst.setString(1, Id);
            pst.setInt(2, sem);
            pst.setString(3, t);
            pst.setInt(4, y);
            rs = pst.executeQuery();
            while(rs.next()){
                String courseId = rs.getString("course_id");
                String courseName = rs.getString("name");
                courseModel.addElement(courseId + ":" + courseName);
            }
            course.setModel(courseModel);
        } catch (SQLException ex) {
            Logger.getLogger(InstructorAttendence.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_yearActionPerformed

    private void courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseActionPerformed
        // TODO add your handling code here:
        String courses = course.getSelectedItem().toString();
        String[] courses_arr = courses.split(":");
        c = courses_arr[0];
    }//GEN-LAST:event_courseActionPerformed

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        try {
            // TODO add your handling code here:
            model.setRowCount(0);
            model.setColumnIdentifiers(new Object[]{"Attendance Date", "Status"});     
            pst = con.prepareStatement("SELECT creation_date, status FROM attendance WHERE cms_id = ? AND semester = ? AND term = ? AND year = ? AND course_id = ?;");
            pst.setString(1, Id);
            pst.setInt(2, sem);
            pst.setString(3, t);
            pst.setInt(4, y);
            pst.setString(5, c);
            rs = pst.executeQuery();
            while (rs.next()){
                String date = rs.getString("creation_date");
                String status = rs.getString("status");
                model.addRow(new Object[]{date, status});
            }
            attend.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace(); // Print the stack trace to identify the cause of the error
        }
    }//GEN-LAST:event_viewActionPerformed

    private void semesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semesterActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            sem = Integer.parseInt(semester.getSelectedItem().toString());
            
            DefaultComboBoxModel termModel = new DefaultComboBoxModel();
            pst = con.prepareStatement("SELECT DISTINCT term FROM attendance WHERE cms_id = ? and semester = ?;");
            pst.setString(1, Id);
            pst.setInt(2, sem);
            rs = pst.executeQuery();
            while(rs.next()){
                String term_ = rs.getString("term");
                termModel.addElement(term_);
            }
            term.setModel(termModel);
        } catch (SQLException ex) {
    Logger.getLogger(MarkAttendance.class.getName()).log(Level.SEVERE, null, ex);
    ex.printStackTrace(); // Print the stack trace to identify the cause of the error
}
    }//GEN-LAST:event_semesterActionPerformed

    private void back_btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_btn1MouseClicked
        new StudentHomePage(Id).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_back_btn1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarkAttendance(Id).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable attend;
    private javax.swing.JLabel back_btn1;
    private javax.swing.JComboBox<String> course;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> semester;
    private javax.swing.JComboBox<String> term;
    private javax.swing.JButton view;
    private javax.swing.JComboBox<String> year;
    // End of variables declaration//GEN-END:variables
}
